apiVersion: kafka.strimzi.io/v1alpha1
kind: KafkaTopic
metadata:
  name: address-book
  labels:
    strimzi.io/cluster: my-cluster
spec:
  partitions: 3
  replicas: 3
  config:
    cleanup.policy: compact
    min.cleanable.dirty.ratio: 0.0
    segment.bytes: 10485760
---
apiVersion: kafka.strimzi.io/v1alpha1
kind: KafkaUser
metadata:
  name: address-book
  labels:
    strimzi.io/cluster: my-cluster
spec:
  authentication:
    type: tls
  authorization:
    type: simple
    acls:
    - resource:
        type: topic
        name: address-book
      operation: Write
    - resource:
        type: topic
        name: address-book
      operation: Create
    - resource:
        type: topic
        name: address-book
      operation: Describe
    - resource:
        type: topic
        name: address-book
      operation: Read
    - resource:
        type: group
        name: address-book
        patternType: prefix
      operation: Read
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: address-book
  name: address-book
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: address-book
    spec:
      containers:
      - name: address-book
        image: scholzj/kafka-address-book:latest
        env:
        - name: CA_CRT
          valueFrom:
            secretKeyRef:
              name: my-cluster-cluster-ca-cert
              key: ca.crt
        - name: USER_CRT
          valueFrom:
            secretKeyRef:
              name: address-book
              key: user.crt
        - name: USER_KEY
          valueFrom:
            secretKeyRef:
              name: address-book
              key: user.key
        - name: KAFKA_BOOTSTRAP_SERVER
          value: my-cluster-kafka-bootstrap:9093
        - name: KAFKA_TOPIC
          value: address-book
        - name: KAFKA_GROUP_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
---
kind: Service
apiVersion: v1
metadata:
  name: address-book
spec:
  selector:
    app: address-book
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: Route
metadata:
  name: address-book
spec:
  to:
    kind: Service
    name: address-book